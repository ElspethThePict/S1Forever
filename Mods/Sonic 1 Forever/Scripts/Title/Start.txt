// ----------------------------------
// RSDK Project: Sonic the Hedgehog Forever
// Script Description: Start Message Object
// Script Author: Christian Whitehead "The Taxman" / Simon Thomley "Stealth", Team Forever
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------


//-------Aliases-------//
private alias 4 : TYPE_STARTMESSAGE

private alias object.value0 : start.timer
private alias object.value1 : lselect.scrollDelayUp
private alias object.value2 : lselect.scrollDelayDown
private alias object.value3 : lselect.menuIndex
private alias object.value4 : start.attractTimer // also soundTestIndex
private alias object.value5 : lselect.specialIndex
private alias object.value6 : lselect.emeraldCount
private alias object.value8 : lselect.emeraldCheatPos
private alias object.value9 : lselect.emeraldsEnabled
private alias object.value11 : lselect.characterSel
private alias object.value12 : touch.delay
private alias object.value13 : touch.fade

public alias saveRAM[286] : saved.language
public alias saveRAM[294] : saved.graphics
public alias saveRAM[295] : saved.mobile
public alias saveRAM[296] : saved.transmobile

private alias 0 : START_FLASH
private alias 1 : START_STARTGAME
private alias 2 : START_STARTLVLSEL
private alias 3 : START_SPECIALATTRAC
private alias 4 : START_STARTATTRACT
private alias 5 : START_SETUPCLVLSEL
private alias 6 : START_HANDLECLVLSEL
private alias 7 : START_CLVLSEL_LOADSTAGE
private alias 8 : START_CLVLSEL_LOADSS
private alias 9 : START_EXITTOMAINMENU

// Function declarations
reserve function Start_HandleTouchControls

// Tables
private table LSelect_CharacterLoad
	0, 1, 2, 5, 3, 4
end table

function Start_HandleTouchControls
	LoadSpriteSheet("LevelSelect/Touch.gif")

	object.inkEffect = INK_ALPHA
	CheckTouchRect(0, 0, screen.xsize, screen.ysize)

	if checkResult > -1
		touch.fade = 0
	else
		touch.fade++
	end if
	if touch.fade >= 400
		if object.alpha > 0
				object.alpha -= 15
		end if
	else
		object.alpha = 255
	end if

	temp0 = screen.xsize
	temp0 -= 44
	temp0 -= 39
	temp0 -= 34
	temp0 -= 10
	DrawSpriteScreenFX(3, FX_INK, 26, 175) //left
	DrawSpriteScreenFX(2, FX_INK, 50, 200) //down
	DrawSpriteScreenFX(4, FX_INK, 74, 175) //right
	DrawSpriteScreenFX(1, FX_INK, 50, 150) //up

	if inputPress.Left==1
		DrawSpriteScreenFX(7, FX_INK, 26, 175)
	endif
	if inputDown.Down==1
		DrawSpriteScreenFX(6, FX_INK, 50, 200)
	end if
	if inputPress.Right==1
		DrawSpriteScreenFX(8, FX_INK, 74, 175)
	endif
	if inputDown.Up==1
		DrawSpriteScreenFX(5, FX_INK, 50, 150)
	endif
	
	temp0 += 45	
	if inputDown.buttonA==1
		DrawSpriteScreenFX(10, FX_INK, temp0, 163)	
	else
		DrawSpriteScreenFX(9, FX_INK, temp0, 163)
	endif

	temp0 -= screen.xsize
	temp0 += 90
	if inputDown.buttonB==1
		DrawSpriteScreenFX(12, FX_INK,temp0,8)
	else
		DrawSpriteScreenFX(11, FX_INK,temp0,8)
	end if

	LoadSpriteSheet("LevelSelect/TextOG.gif")
end function


event ObjectMain
	switch object.state
	case START_FLASH // handles the "PRESS START BUTTON" / Touch message.
		CheckTouchRect(0, 0, screen.xsize, screen.ysize)
		temp0 = 0
		if checkResult > -1
			temp0 = 1
			saveRAM[295] = 1
			WriteSaveRam()
		end if
		if inputPress.start == 1
			temp0 = 1	
			saveRAM[295] = 0
			WriteSaveRam()
		end if
		if inputPress.buttonA == 1
			//temp0 = 1
		end if
		if inputPress.buttonB == 1
			//temp0 = 1
		end if
		if inputPress.buttonC == 1
			//temp0 = 1
		end if
		if temp0 == 1
			if options.stageSelectFlag == 1
				object.state = START_SETUPCLVLSEL
			else
				object.state = START_STARTGAME
			end if
		else
			start.attractTimer++
			if start.attractTimer == 720
				if object.xpos == screen.xcenter
					if attract.stage == 3
						object.state = START_SPECIALATTRAC 
						PlaySfx(SfxName[Warp], 0)
						fadeColor = color7
						fadeColor <<= 16
						temp0 = color7
						temp0 <<= 8
						fadeColor += temp0
						fadeColor += color7
						StopMusic()
					else
						object.state = START_STARTATTRACT
					end if
				end if
			end if
		end if
		break
	case START_STARTGAME // Loads the Main Menu
		start.timer += 4
		music.volume -= 2
		if start.timer == 140
			StopMusic()
			stage.activeList = PRESENTATION_STAGE
			stage.listPos = StageName[P - MAIN MENU]
			LoadStage()
		end if
		SetClassicFade(0, 0, 0, start.timer)
		break
	case START_STARTLVLSEL // 2013 Level Select... unused code moment!
		start.timer += 8
		music.volume -= 2
		if start.timer == 320
			StopMusic()
			stage.activeList = PRESENTATION_STAGE
			stage.listPos = StageName[P - LEVEL SELECT]
			LoadStage()
		end if
		SetScreenFade(0, 0, 0, start.timer)
		break
	case START_SPECIALATTRAC //separate state for special stage attract
		start.timer += 8
		if start.timer == 768
			stage.activeList = SPECIAL_STAGE
			stage.listPos = 0
			LoadPalette("SpecialStage.act",0,0,0,128)
			Rand(stage.playerListPos, 4)
			if stage.playerListPos < 3
					stage.player2Enabled = 0
			end if
			attract.stage++
			attract.stage &= 3
			options.attractMode = 1
			credits.screen = 0
			LoadStage()
		end if
		SetClassicFade(color7, color7, color7, start.timer)
		break
	case START_STARTATTRACT // we do demo stuff here!!
		start.timer += 8
		music.volume -= 2
		if start.timer == 320
			StopMusic()
			stage.activeList = REGULAR_STAGE
			stage.listPos = attract.stage
			stage.listPos *= 3
			Rand(stage.playerListPos, 4)
			if stage.playerListPos < 3
					stage.player2Enabled = 0
			end if
			attract.stage++
			attract.stage &= 3
			options.attractMode = 1
			credits.screen = 0
			LoadStage()
		end if
		SetClassicFade(0, 0, 0, start.timer)
		break
	case START_SETUPCLVLSEL // sets up the classic level select from Genesis S1.
		LoadPalette("LevelSel.act", 0, 0, 0, 256)
		stage[0].activeLayer = 2
		object.value10 = 1 // Let the Logo object know to stop animation
		LoadSpriteSheet("LevelSelect/TextOG.gif")
		SetupMenu(MENU_1, 0, 1, 2)
		AddMenuEntry(MENU_1, "GREEN HILL ZONE  STAGE 1", 1)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "MARBLE ZONE      STAGE 1", 0)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "SPRING YARD ZONE STAGE 1", 0)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "LABYRINTH ZONE   STAGE 1", 0)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "STAR LIGHT ZONE  STAGE 1", 0)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "SCRAP BRAIN ZONE STAGE 1", 0)
		AddMenuEntry(MENU_1, "                 STAGE 2", 0)
		AddMenuEntry(MENU_1, "                 STAGE 3", 0)
		AddMenuEntry(MENU_1, "FINAL ZONE              ", 0)
		AddMenuEntry(MENU_1, "SPECIAL STAGE   01      ", 0)
		AddMenuEntry(MENU_1, "SOUND SELECT    00      ", 0)
		AddMenuEntry(MENU_1, "                        ", 0)
		AddMenuEntry(MENU_1, "PLAYER             SONIC", 0)
		stage.playerListPos = 0
		menu1.selection = 0
		object.state = START_HANDLECLVLSEL
		lselect.scrollDelayUp = 0
		lselect.scrollDelayDown = 0
		lselect.menuIndex = 0
		start.attractTimer = 0   // soundTestIndex
		lselect.specialIndex = 0 // Wipe the potentially last selected special stage.
		lselect.emeraldCount = 6 // set the emerald total count to 6.
		lselect.emeraldCount += saved.superStates // add the extra chaos emerald if the 7th one is enabled.
		object.value7 = 5
		object.value7 += SaveRAM[412]
		lselect.characterSel = 0
		break
	case START_HANDLECLVLSEL // Handle the Classic Level Select. 
		if saved.mobile == 1     // If Touch Controls are active / you are on mobile, the code below handles the touch input's delay.
			if touch.delay == 0
				CheckTouchRect(0, 96, screen.xcenter, screen.ysize)
				if checkResult > -1
					arrayPos0 = checkResult
					temp0 = touchscreen[arrayPos0].xpos
					temp0 -= 56
					temp1 = touchscreen[arrayPos0].ypos
					temp1 -= 184
					ATan2(temp2, temp0, temp1)
					temp2 += 42
					temp2 &= 255
					temp2 >>= 6
					switch temp2
					case 0
						inputPress.right = 1
						touch.delay = -10
						break
					case 1
						inputDown.down = 1
						touch.delay = -10
						break
					case 2
						inputPress.left = 1
						touch.delay = -10
						break
					case 3
						inputDown.up = 1
						touch.delay = -10
						break
					end switch
				end if
				CheckTouchRect(screen.xcenter, 96, screen.xsize, 240)
				if checkResult > -1
					inputDown.buttonA = 1
				end if
				if touchJump == 0
					inputPress.buttonA |= inputDown.buttonA
				end if
				touchJump = inputDown.buttonA

				CheckTouchRect(0, 0, 40, 40)
				if checkResult > -1
					touch.delay = -10
					inputPress.buttonB = 1
				end if
			else
				touch.delay++
			end if
		end if


		if inputPress.buttonB == 1               // If you press B
			object.state = START_EXITTOMAINMENU  // Back out to the game's Main Menu.
		end if
		
		if inputDown.down == 1                 // This code handles the menu navigation delay.
			lselect.scrollDelayUp = 0
			lselect.scrollDelayDown++
			if lselect.scrollDelayDown == 1
				lselect.menuIndex++
			end if
			lselect.scrollDelayDown %= 12
		else
			if inputDown.up == 1
				lselect.scrollDelayDown = 0
				lselect.scrollDelayUp++
				if lselect.scrollDelayUp == 1
					lselect.menuIndex--
				end if
				lselect.scrollDelayUp %= 12
			else
				lselect.scrollDelayUp = 0
				lselect.scrollDelayDown = 0
			end if
		end if

		while lselect.menuIndex < 0
			lselect.menuIndex += 22
		loop

		lselect.menuIndex %= 22
		
		menu1.selection = lselect.menuIndex

		if menu1.selection == 21
			menu1.selection++
		end if
		
		switch lselect.menuIndex
			case 20
				temp1 = 0
				if inputPress.left == 1
					start.attractTimer--    // if you're curious about why this is used here, this value is reused for Sound Test controls, as it's no longer used to time the demo to start.
					temp1 = 1
				end if
				if inputPress.right == 1
					start.attractTimer++
					temp1 = 1
				end if
				while start.attractTimer < 0
					start.attractTimer += 20
				loop
				start.attractTimer %= 20
				if temp1 == 1
					switch start.attractTimer
						case 0
							EditMenuEntry(MENU_1, "SOUND SELECT    00      ", 20, 1)
							break
						case 1
							EditMenuEntry(MENU_1, "SOUND SELECT    01      ", 20, 1)
							break
						case 2
							EditMenuEntry(MENU_1, "SOUND SELECT    02      ", 20, 1)
							break
						case 3
							EditMenuEntry(MENU_1, "SOUND SELECT    03      ", 20, 1)
							break
						case 4
							EditMenuEntry(MENU_1, "SOUND SELECT    04      ", 20, 1)
							break
						case 5
							EditMenuEntry(MENU_1, "SOUND SELECT    05      ", 20, 1)
							break
						case 6
							EditMenuEntry(MENU_1, "SOUND SELECT    06      ", 20, 1)
							break
						case 7
							EditMenuEntry(MENU_1, "SOUND SELECT    07      ", 20, 1)
							break
						case 8
							EditMenuEntry(MENU_1, "SOUND SELECT    08      ", 20, 1)
							break
						case 9
							EditMenuEntry(MENU_1, "SOUND SELECT    09      ", 20, 1)
							break
						case 10
							EditMenuEntry(MENU_1, "SOUND SELECT    10      ", 20, 1)
							break
						case 11
							EditMenuEntry(MENU_1, "SOUND SELECT    11      ", 20, 1)
							break
						case 12
							EditMenuEntry(MENU_1, "SOUND SELECT    12      ", 20, 1)
							break
						case 13
							EditMenuEntry(MENU_1, "SOUND SELECT    13      ", 20, 1)
							break
						case 14
							EditMenuEntry(MENU_1, "SOUND SELECT    14      ", 20, 1)
							break
						case 15
							EditMenuEntry(MENU_1, "SOUND SELECT    15      ", 20, 1)
							break
						case 16
							EditMenuEntry(MENU_1, "SOUND SELECT    16      ", 20, 1)
							break
						case 17
							EditMenuEntry(MENU_1, "SOUND SELECT    17      ", 20, 1)
							break
						case 18
							EditMenuEntry(MENU_1, "SOUND SELECT    18      ", 20, 1)
							break
						case 19
							EditMenuEntry(MENU_1, "SOUND SELECT    19      ", 20, 1)
							break
					end switch
				end if
				break
			case 19
				temp1 = 0
				if inputPress.left == 1
					lselect.specialIndex--
					temp1 = 1
				end if
				if inputPress.right == 1
					lselect.specialIndex++
					temp1 = 1
				end if
				while lselect.specialIndex < 0
					lselect.specialIndex += lselect.emeraldCount
				loop
				lselect.specialIndex %= lselect.emeraldCount
				if temp1 == 1
					switch lselect.specialIndex
						case 0
							EditMenuEntry(MENU_1, "SPECIAL STAGE   01      ", 19, 1)
							break
						case 1
							EditMenuEntry(MENU_1, "SPECIAL STAGE   02      ", 19, 1)
							break
						case 2
							EditMenuEntry(MENU_1, "SPECIAL STAGE   03      ", 19, 1)
							break
						case 3
							EditMenuEntry(MENU_1, "SPECIAL STAGE   04      ", 19, 1)
							break
						case 4
							EditMenuEntry(MENU_1, "SPECIAL STAGE   05      ", 19, 1)
							break
						case 5
							EditMenuEntry(MENU_1, "SPECIAL STAGE   06      ", 19, 1)
							break
						case 6
							EditMenuEntry(MENU_1, "SPECIAL STAGE   07      ", 19, 1)
							break
					end switch
				end if
				break
			case 21
				temp1 = 0
				if inputPress.left == 1
					lselect.characterSel--
					temp1 = 1
				end if
				if inputPress.right == 1
					lselect.characterSel++
					temp1 = 1
				end if
				while lselect.characterSel < 0
					lselect.characterSel += object.value7
				loop
				lselect.characterSel %= object.value7
				if temp1 == 1
					switch lselect.characterSel
						case 0
							EditMenuEntry(MENU_1, "PLAYER             SONIC", 22, 1)
							break
						case 1
							EditMenuEntry(MENU_1, "PLAYER             TAILS", 22, 1)
							break
						case 2
							EditMenuEntry(MENU_1, "PLAYER          KNUCKLES", 22, 1)
							break
						case 3
							EditMenuEntry(MENU_1, "PLAYER               AMY", 22, 1)
							break
						case 4
							EditMenuEntry(MENU_1, "PLAYER     SONIC & TAILS", 22, 1)
							break
						case 5
							EditMenuEntry(MENU_1, "PLAYER  KNUCKLES & TAILS", 22, 1)
							break
					end switch
				end if
				break
		end switch
		
		CheckEqual(inputPress.buttonA, 1)
		temp0 = checkResult
		CheckEqual(inputPress.start, 1)
		temp0 |= checkResult
		if temp0 == 1
			WriteSaveRam()
			options.attractMode = 0
			switch lselect.menuIndex
				case 19 //special stage
					stage.activeList = SPECIAL_STAGE
					stage.listPos = lselect.specialIndex
					PlaySfx(SfxName[Warp], 0)
					fadeColor = color7
					fadeColor <<= 16
					temp0 = color7
					temp0 <<= 8
					fadeColor += temp0
					fadeColor += color7
					object.state = 8					
					if lselect.emeraldsEnabled == 1
						specialStage.emeralds = 127
					end if
					break
				case 20 // Sound Test selection.
					switch start.attractTimer // this switch dictates what will happen on a sound test selection.
						case 0
							StopMusic()
							break
						case 1
							SetMusicTrack("GreenHill.ogg", 0, 0x9B0AA)
							PlayMusic(0)
							break
						case 2
							SetMusicTrack("Marble.ogg", 0, 0x18434)
							PlayMusic(0)
							break
						case 3
							SetMusicTrack("SpringYard.ogg", 0, 0x18968)
							PlayMusic(0)
							break
						case 4
							SetMusicTrack("Labyrinth.ogg", 0, 0x149DC)
							PlayMusic(0)
							
							break
						case 5
							SetMusicTrack("Starlight.ogg", 0, 0x1498C)
							PlayMusic(0)
							break
						case 6
							SetMusicTrack("ScrapBrain.ogg", 0, 1)
							PlayMusic(0)
							break
						case 7
							SetMusicTrack("Invincibility.ogg", 0, 0x9A68)
							PlayMusic(0)
							break
						case 8
							PlaySfx(SfxName[Life], 0)
							PauseMusic()
							ResetObjectEntity(25, TypeName[Music Event], 2, 0, 0)
							object[25].priority = PRIORITY_ACTIVE
							break
						case 9
							SetMusicTrack("SpecialStage.ogg", 0, 1)
							PlayMusic(0)
							break
						case 10
							SetMusicTrack("Titlescreen.ogg", 0, 0)
							PlayMusic(0)
							break
						case 11
							SetMusicTrack("Ending.ogg", 0, 0)
							PlayMusic(0)
							break
						case 12
							SetMusicTrack("Boss.ogg", 0, 1)
							PlayMusic(0)
							break
						case 13
							SetMusicTrack("Final.ogg", 0, 0x14AC8)
							PlayMusic(0)
							break
						case 14
							SetMusicTrack("ActComplete.ogg", 0, 0)
							PlayMusic(0)
							break
						case 15
							SetMusicTrack("GameOver.ogg", 0, 0)
							PlayMusic(0)
							break
						case 16
							SetMusicTrack("Continue.ogg", 0, 0)
							PlayMusic(0)
							break
						case 17
							SetMusicTrack("Credits.ogg", 0, 0)
							PlayMusic(0)
							break
						case 18
							SetMusicTrack("Drowning.ogg", 0, 0)
							PlayMusic(0)
							break
						case 19
							SetMusicTrack("ModList.ogg", 0, 5135)
							PlayMusic(0)
							break
					end switch

					if lselect.emeraldsEnabled == 0 // if chaos emeralds are not active
						switch start.attractTimer // handle cheat code inputs. sound test selection.
							case 1 // second input.
								if lselect.emeraldCheatPos == 1
									lselect.emeraldCheatPos = 2
								else
									lselect.emeraldCheatPos = 0
								end if
								break
							case 2 // third input.
								if lselect.emeraldCheatPos == 2
									lselect.emeraldCheatPos = 3
								else
									lselect.emeraldCheatPos = 0
								end if
								break
							case 4 // first input.
								lselect.emeraldCheatPos = 1
								break
							case 6 // WOO CHAOS!!!!!!!!! :exploder:
								if lselect.emeraldCheatPos == 3
									lselect.emeraldCheatPos = 4
									lselect.emeraldsEnabled = 1
									PlaySfx(SfxName[Emerald], 0)
								else
									lselect.emeraldCheatPos = 0
								end if
								break
							default
								lselect.emeraldCheatPos = 0
								break
						end switch
					end if
					break
				case 21
					break
				default
					stage.activeList = REGULAR_STAGE
					stage.listPos = lselect.menuIndex
					if lselect.emeraldsEnabled == 1
						specialStage.emeralds = 127
					end if
					object.state = 7
					break
			end switch
		end if		
		break
	case START_CLVLSEL_LOADSTAGE // Load a selected stage!
		if start.timer < 256
			music.volume -= 10
			start.timer += 16
			SetClassicFade(0, 0, 0, start.timer)
		else
			GetTableValue(stage.playerListPos, lselect.characterSel, LSelect_CharacterLoad)
			LoadStage()
			SetClassicFade(0, 0, 0, 255)
		end if
		break
	case START_CLVLSEL_LOADSS // Load a selected Special Stage!
		if start.timer < 768
			music.volume -= 10
			start.timer += 8
		else
			GetTableValue(stage.playerListPos, lselect.characterSel, LSelect_CharacterLoad)
			StopMusic()
			LoadPalette("SpecialStage.act",0,0,0,128)
			LoadStage()
		end if
		SetClassicFade(color7, color7, Color7, start.timer)
		break
	case START_EXITTOMAINMENU // Leaving the classic level select, boot to Main Menu.
		start.timer += 8
		music.volume -= 2
		if start.timer == 320
			StopMusic()
			stage.activeList = PRESENTATION_STAGE
			stage.listPos = StageName[P - MAIN MENU]
			LoadStage()
		end if
		SetClassicFade(0, 0, 0, start.timer)
		break
	end switch
end event


event ObjectDraw
	switch object.state
		case START_HANDLECLVLSEL
		case START_CLVLSEL_LOADSTAGE
		case START_CLVLSEL_LOADSS
		case START_EXITTOMAINMENU
			if saved.mobile == 1
				CallFunction(Start_HandleTouchControls)
			end if
			temp0 = screen.xcenter
			DrawMenu(MENU_1, temp0, 40)
			break
		default
			object.animationTimer++
			if object.animationTimer > 59
				object.animationTimer = 0
			end if
			if object.animationTimer > 29
				DrawSpriteScreenXY(0, object.xpos, object.ypos)
			end if
			break
	end switch
end event


event ObjectStartup
	switch saved.mobile
	case 0
		switch saved.language
			default
				SpriteFrame(-72, -4, 144, 8, 1, 274)
				break
			case 1 //PTBR
				SpriteFrame(-80, -4, 160, 8, 1, 292)
				break	
			case 2 //SP
				SpriteFrame(-91, -7, 181, 11, 1, 301)
				break	
			case 3 //FR
				SpriteFrame(-72, -4, 144, 8, 1, 283)
				break	
			case 4 //GE
				SpriteFrame(-83, -7, 165, 11, 1, 262)
				break	
		end switch
		break
	case 1
		SpriteFrame(-56, -4, 112, 8, 1, 253)

			SpriteFrame(0,0,16,16,281,10) //1 DPAD up press
			SpriteFrame(0,0,16,16,281,44) //2 DPAD down press
			SpriteFrame(0,0,16,16,265,27) //3 DPAD left press
			SpriteFrame(0,0,16,16,297,27) //4 DPAD right press

			SpriteFrame(0,0,16,16,281,78) //5 DPAD up press
			SpriteFrame(0,0,16,16,281,112) //6 DPAD down press
			SpriteFrame(0,0,16,16,265,95) //7 DPAD left press
			SpriteFrame(0,0,16,16,297,95) //8 DPAD right press

			SpriteFrame(0,0,48,48,322,1) //9 A button
			SpriteFrame(0,0,48,48,322,50) //10 A button down
			SpriteFrame(0,0,16,16,339,99) // 11 Back Button
			SpriteFrame(0,0,16,16,322,99) // 12 Back Button
		break
	end switch
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
