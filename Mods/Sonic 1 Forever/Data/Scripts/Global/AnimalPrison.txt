// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Animal Prison Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 21 : TYPE_ANIMALPRISON

// Function declarations
reserve function AnimalPrison_DebugDraw
reserve function AnimalPrison_DebugSpawn

// Static Values

// Tables

function AnimalPrison_DebugDraw
	DrawSprite(2)
	DrawSprite(0)
end function


function AnimalPrison_DebugSpawn
	CreateTempObject(TypeName[Animal Prison], 0, object.xpos, object.ypos)
end function


event ObjectMain
	switch object.state
	case 0
		if object.outOfBounds == 0
			temp0 = object.ixpos
			temp0 -= screen.xcenter
			stage.newXBoundary1 = temp0
			temp0 = object.ixpos
			temp0 += screen.xcenter
			stage.newXBoundary2 = temp0		
		end if
		
		object.frame = object.animationTimer
		object.frame /= 3
		object.frame += 2
		object.animationTimer++
		object.animationTimer %= 6
		break
	case 1
		if object[0].controlMode == -1
			object[0].left = 0
			object[0].right = 1
			object[0].up = 0
			object[0].down = 0
			object[0].jumpHold = 0
			object[0].jumpPress = 0
		end if
		object.value0++
		temp0 = object.value0
		temp0 &= 7
		if temp0 == 4
			Rand(temp0, 48)
			temp0 -= 24
			temp0 <<= 16
			temp0 += object.xpos
			Rand(temp1, 48)
			temp1 -= 24
			temp1 <<= 16
			temp1 += object.ypos
			CreateTempObject(TypeName[Explosion], 0, temp0, temp1)
			object[tempObjectPos].drawOrder = 4
			PlaySfx(SfxName[Explosion], 0)
		end if
		if object.value0 == 60
			temp1 = object.ypos
			temp1 += 0x40000
			temp2 = 0
			temp3 = 30
			while temp2 < 32
				Rand(temp0, 48)
				temp0 >>= 2
				temp0 <<= 18
				temp0 -= 0x180000
				temp0 += object.xpos
				temp4 = temp2
				temp4 &= 1
				if temp4 == 0
					CreateTempObject(animalType1, temp3, temp0, temp1)
				else
					CreateTempObject(animalType2, temp3, temp0, temp1)
				end if
				object[tempObjectPos].value1 = 1
				temp0 += 0x40000
				temp2++
				temp3 += 5
			loop
			object.drawOrder = 4
			object.value0 = 4
			object.state++
		end if
		object.frame = object.animationTimer
		object.frame /= 3
		object.frame += 4
		object.animationTimer++
		object.animationTimer %= 6
		break
	case 2
		object.value0++
		temp0 = object.value0
		temp0 &= 7
		if temp0 == 4
			Rand(temp0, 48)
			temp0 -= 24
			temp0 <<= 16
			temp0 += object.xpos
			Rand(temp1, 48)
			temp1 -= 24
			temp1 <<= 16
			temp1 += object.ypos
			CreateTempObject(TypeName[Explosion], 0, temp0, temp1)
			object[tempObjectPos].drawOrder = 4
			PlaySfx(SfxName[Explosion], 0)
		end if
		if object.value0 == 34
			object.value0 = 0
			object.state++
		end if
		object.frame = object.animationTimer
		object.frame /= 3
		object.frame += 4
		object.animationTimer++
		object.animationTimer %= 6
		break
	case 3
		if object.value0 < 300
			object.value0++
		else
			PlayMusic(1)
			object[30].type = TypeName[Act Finish]
			object[30].drawOrder = 6
			object[30].priority = PRIORITY_ACTIVE
			object.value0 = 0
			object.state++
		end if
		break
	end switch
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		switch object.state
		case 0
			BoxCollisionTest(C_BOX, object.entityPos, -32, -24, 32, 32, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			BoxCollisionTest(C_BOX, object.entityPos, -11, -48, 11, -24, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult == 1
				object.state = 1
				stage.timeEnabled = 0
				if object[currentPlayer].animation == ANI_JUMPING
					object[currentPlayer].animation = ANI_WALKING
				end if
				if PlayerObject_SuperState == 1
					PlayerObject_SuperState = 2
				end if
				object[0].controlMode = -1
			end if
			break
		case 1
			BoxCollisionTest(C_BOX, object.entityPos, -32, -24, 32, 32, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			BoxCollisionTest(C_BOX, object.entityPos, -11, -40, 11, -24, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			break
		end switch
		temp0 = screen.xcenter
		temp0 += 40
		temp0 <<= 16
		temp1 = object.xpos
		temp1 += temp0
		if object[currentPlayer].xpos > temp1
			object[currentPlayer].xpos = temp1
			object[currentPlayer].speed = 0
			object[currentPlayer].xvel = 0
			if object[currentPlayer].gravity == GRAVITY_GROUND
				object[currentPlayer].yvel = 0
			end if
		end if
	next
end event


event ObjectDraw
	switch object.state
	case 0
	case 1
		DrawSprite(object.frame)
		DrawSprite(0)
		break
	case 2
	case 3
	case 4
		DrawSprite(1)
		break
	end switch
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-32, -32, 64, 62, 109, 166)
	SpriteFrame(-32, -2, 64, 32, 35, 202)
	SpriteFrame(-11, -48, 22, 16, 84, 166)
	SpriteFrame(-11, -48, 22, 16, 35, 236)
	SpriteFrame(-11, -40, 22, 16, 84, 166)
	SpriteFrame(-11, -40, 22, 16, 35, 236)
	SetTableValue(TypeName[Animal Prison], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(AnimalPrison_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(AnimalPrison_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
	
	foreach (TypeName[Animal Prison], arrayPos0, ALL_ENTITIES)
		if options.gameMode == 2
			object[arrayPos0].type = TypeName[Blank Object]
		else
			object[arrayPos0].priority = PRIORITY_ACTIVE
		end if
	next
end event

event RSDKDraw
	DrawSprite(object.frame)
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-32, -32, 64, 62, 109, 166)
	SpriteFrame(-32, -2, 64, 32, 35, 202)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")	
end event
