// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Eggman Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 66 : TYPE_EGGMAN

// Function declarations
reserve function Eggman_Function151
reserve function Eggman_Function152

// Static Values

// Tables

function Eggman_Function151
	Sin256(object.ypos, object.angle)
	object.ypos <<= 10
	object.ypos += object.value8
	object.angle += 2
	object.angle &= 255
end function


function Eggman_Function152
	if object.value9 > 0
		object.value9--
	else
		Rand(temp0, 112)
		temp0 -= 56
		temp0 <<= 16
		temp0 += object[+1].xpos
		temp1 = object[+1].ypos
		temp1 += 0x200000
		CreateTempObject(TypeName[Fireball], 0, temp0, temp1)
		object[tempObjectPos].state = 1
		object[tempObjectPos].xvel = 0
		object[tempObjectPos].yvel = -0x40000
		object[tempObjectPos].value3 = temp1
		object[tempObjectPos].value2 = 2
		PlaySfx(SfxName[Small Fireball], 0)
		if object.value10 == 0
			Rand(temp0, 3)
			if temp0 == 2
				object.value9 = 70
				object.value10 = 1
			else
				object.value9 = 140
			end if
		else
			object.value10 = 0
			object.value9 = 140
		end if
	end if
end function


event ObjectMain
	switch object.state
	case 0
		temp0 = object[+1].ixpos
		temp0 += screen.xcenter
		stage.newXBoundary2 = temp0
		temp0 -= screen.xsize
		stage.newXBoundary1 = temp0
		temp0 = stage.curYBoundary2
		temp0 -= screen.ysize
		stage.newYBoundary1 = temp0
		if object[0].xpos > object[+1].xpos
			object.value7 = object[+1].ypos
			object.value7 -= 0x900000
			object.value8 = object[+1].ypos
			object.value8 -= 0x900000
			temp0 = 0x700000
			temp0 *= screen.xcenter
			temp0 /= 160
			object.speed = 0x20000
			object.speed *= screen.xcenter
			object.speed /= 160
			object.value5 = object[+1].xpos
			object.value5 -= temp0
			object.value6 = object[+1].xpos
			object.value6 += temp0
			object.xvel = -0x10000
			object.value3 = 1
			object.value9 = 120
			object[0].value18 = 4
			if object[1].type == TypeName[Player 2 Object]
				object[1].value18 = 4
			end if
			object.state++
		end if
		break
	case 1
		object.xpos += object.xvel
		if object.xpos <= object.value6
			object.xpos = object.value6
			object.value3 = 0
			object.state++
		end if
		CallFunction(Eggman_Function151)
		break
	case 2
		CallFunction(Eggman_Function151)
		object.value0++
		if object.value0 == 16
			object.value0 = 0
			object.xvel = object.speed
			FlipSign(object.xvel)
			object.yvel = 0x10000
			object.value3 = 1
			object.state++
		end if
		break
	case 3
		object.xpos += object.xvel
		object.yvel -= 0x400
		object.ypos += object.yvel
		if object.xpos <= object.value5
			object.xpos = object.value5
			object.value3 = 0
			object.state++
		end if
		CallFunction(Eggman_Function152)
		break
	case 4
		object.yvel -= 0x400
		object.ypos += object.yvel
		if object.ypos <= object.value7
			object.ypos = object.value7
			object.direction = FLIP_X
			object.animation = 3
			object.animationTimer = 0
			CreateTempObject(TypeName[Boss Fireball], 0, object.xpos, object.ypos)
			object[tempObjectPos].ypos += 0x140000
			object[tempObjectPos].drawOrder = 3
			object.state++
		end if
		CallFunction(Eggman_Function152)
		break
	case 5
		object.value0++
		if object.value0 == 80
			object.value0 = 0
			object.xvel = object.speed
			object.yvel = 0x10000
			object.animation = 1
			object.value3 = 1
			object.state++
		end if
		CallFunction(Eggman_Function152)
		break
	case 6
		object.xpos += object.xvel
		object.yvel -= 0x400
		object.ypos += object.yvel
		if object.xpos >= object.value6
			object.xpos = object.value6
			object.value3 = 0
			object.state++
		end if
		CallFunction(Eggman_Function152)
		break
	case 7
		object.yvel -= 0x400
		object.ypos += object.yvel
		if object.ypos <= object.value7
			object.ypos = object.value7
			object.direction = FLIP_NONE
			object.animation = 3
			object.animationTimer = 0
			CreateTempObject(TypeName[Boss Fireball], 0, object.xpos, object.ypos)
			object[tempObjectPos].ypos += 0x140000
			object[tempObjectPos].drawOrder = 3
			object.state++
		end if
		CallFunction(Eggman_Function152)
		break
	case 8
		object.value0++
		if object.value0 == 80
			object.value0 = 0
			object.xvel = object.speed
			FlipSign(object.xvel)
			object.yvel = 0x10000
			object.animation = 1
			object.value3 = 1
			object.state = 3
		end if
		CallFunction(Eggman_Function152)
		break
	case 9
		object.value0++
		temp0 = object.value0
		temp0 &= 7
		if temp0 == 4
			Rand(temp0, 64)
			temp0 -= 32
			temp0 <<= 16
			temp0 += object.xpos
			Rand(temp1, 48)
			temp1 -= 24
			temp1 <<= 16
			temp1 += object.ypos
			CreateTempObject(TypeName[Explosion], 0, temp0, temp1)
			object[tempObjectPos].drawOrder = 5
			PlaySfx(SfxName[Explosion], 0)
		end if
		if object.value0 == 180
			object.animation = 6
			object.animationTimer = 0
			object.value0 = 0
			object.direction = FLIP_X
			stage.newYBoundary1 = 0
			object.state++
		end if
		break
	case 10
		
		object.ypos += object.yvel
		object.yvel += 0x1800
		object.value0++
		if object.value0 == 32
			object.yvel = 0
			object.value0 = 0
			object.state++
		end if
		break
	case 11
		if object.value0 < 40
			object.ypos += object.yvel
			object.yvel -= 0x800
			object.value0++
		else
			object.value0 = 0
			object.yvel = 0
			object.angle = 0
			object.value8 = object.ypos
			object.state++
		end if
		break
	case 12
		CallFunction(Eggman_Function151)
		if object.value0 < 8
			object.value0++
		else
			object.value0 = 0
			object.animation = 7
			object.animationTimer = 0
			object.value3 = 2
			object.value4 = 0
			object.priority = PRIORITY_ACTIVE
			temp0 = tileLayer[0].xsize
			temp0 <<= 7
			stage.newXBoundary2 = temp0
			object.state++
		end if
		break
	case 13
		CallFunction(Eggman_Function151)
		object.xpos += 0x40000
		object.value8 -= 0x18000
		if object.outOfBounds == 1
			object.type = TypeName[Blank Object]
			object.priority = PRIORITY_ACTIVE_BOUNDS
		end if
		break
	case 14
		object.value12++
		if object.value12 == 16
			object.value12 = 0
			object.state = object.value11
		end if
		break
	end switch
	if object.value1 != 0
		if object.value2 > 0
			object.value2--
		end if
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			if object.value2 == 0
				CheckEqual(object[currentPlayer].animation, ANI_HURT)
				temp0 = checkResult
				CheckEqual(object[currentPlayer].animation, ANI_DYING)
				temp0 |= checkResult
				CheckEqual(object[currentPlayer].animation, ANI_DROWNING)
				temp0 |= checkResult
				if temp0 != 0
					if object.animation != 2
						object.animation = 2
						object.animationTimer = 0
					end if
				end if
				BoxCollisionTest(C_TOUCH, object.entityPos, -23, -16, 23, 16, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
				if checkResult == 0
					BoxCollisionTest(C_TOUCH, object.entityPos, -16, -21, 16, 21, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
				end if	
				if checkResult == 1
					CallFunction(PlayerObject_CheckHit)
					if object.state > 2
						if object.state != 14
							object.value11 = object.state
							object.state = 14
						end if
					end if
				else
					CallFunction(BossTarget)
				end if
				if checkResult == 1
					object.value1--
					if object.value1 == 0
						player.score += 1000
						object.animation = 5
						object.animationTimer = 0
						object.value3 = 0
						object.value0 = 0
						object.yvel = 0
						object.state = 9
					else
						object.animation = 4
						object.animationTimer = 0
						object.value2 = 32
						PlaySfx(SfxName[Boss Hit], 0)
					end if
				end if
			end if
		next
	end if
	if object.state < 13
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			temp0 = object[currentPlayer].collisionRight
			temp0 <<= 16
			temp0 += object[currentPlayer].xpos
			temp1 = stage.curXBoundary2
			temp1 <<= 16
			if temp0 > temp1
				object[currentPlayer].xvel = 0
				object[currentPlayer].speed = 0
				object[currentPlayer].xpos = temp1
				temp0 = object[currentPlayer].collisionRight
				temp0 <<= 16
				object[currentPlayer].xpos -= temp0
			end if
		next
	end if
end event


event ObjectDraw
	switch object.animation
	case 1
		temp0 = object.animationTimer
		temp0 /= 6
		object.animationTimer++
		object.animationTimer %= 12
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 2
		temp0 = object.animationTimer
		temp0 %= 10
		temp0 /= 5
		temp0 += 9
		object.animationTimer++
		if object.animationTimer == 50
			object.animationTimer = 0
			if object[0].animation != ANI_DYING
				object.animation = 1
			end if
		end if
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 3
		temp0 = object.animationTimer
		temp0 /= 5
		temp0 += 9
		object.animationTimer++
		object.animationTimer %= 10
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 4
		temp0 = object.animationTimer
		temp0 &= 1
		temp0 += 2
		object.animationTimer++
		if object.animationTimer == 30
			object.animationTimer = 0
			object.animation = 1
		end if
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 5
		temp0 = object.animationTimer
		temp0 >>= 5
		temp0 += 4
		object.animationTimer++
		object.animationTimer &= 63
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 6
		DrawSpriteFX(6, FX_FLIP, object.xpos, object.ypos)
		break
	case 7
		temp0 = object.animationTimer
		temp0 >>= 2
		temp0 += 7
		object.animationTimer++
		object.animationTimer %= 7
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	end switch
	switch object.value3
	case 1
		temp0 = object.value4
		temp0 >>= 2
		temp0 += 11
		object.value4++
		object.value4 &= 7
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	case 2
		temp0 = object.value4
		temp0 /= 3
		temp0 += 11
		object.value4++
		if object.value4 > 21
			object.value4 = 18
		end if
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		break
	end switch
	DrawSpriteFX(19, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup
	if stage.playerListPos == 2
		if saveRAM[279] == 1
			LoadSpriteSheet("Global/Eggrobo.gif")
		else
			LoadSpriteSheet("Global/Eggman.gif")
		end if
	else
		LoadSpriteSheet("Global/Eggman.gif")
	end if
	SpriteFrame(-28, -32, 64, 56, 1, 1)
	SpriteFrame(-28, -32, 64, 56, 66, 1)
	SpriteFrame(-28, -32, 64, 56, 131, 1)
	SpriteFrame(-28, -32, 64, 56, 1, 58)
	SpriteFrame(-28, -32, 64, 56, 1, 1)
	SpriteFrame(-28, -32, 64, 56, 1, 58)
	SpriteFrame(-28, -32, 64, 56, 66, 58)
	SpriteFrame(-28, -32, 64, 56, 131, 58)
	SpriteFrame(-28, -32, 64, 56, 66, 1)
	SpriteFrame(-28, -32, 64, 56, 1, 115)
	SpriteFrame(-28, -32, 64, 56, 66, 115)
	SpriteFrame(34, 1, 10, 9, 196, 2)
	SpriteFrame(33, 0, 15, 11, 196, 12)
	SpriteFrame(34, -1, 22, 14, 213, 1)
	SpriteFrame(34, -8, 32, 26, 213, 16)
	SpriteFrame(34, -1, 22, 14, 213, 1)
	SpriteFrame(34, -8, 32, 26, 213, 16)
	SpriteFrame(34, 1, 10, 9, 196, 2)
	SpriteFrame(33, 0, 15, 11, 196, 12)
	SpriteFrame(-8, 16, 16, 16, 238, 43)
	temp1 = 0
	foreach (TypeName[MZ Eggman], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].animation = 1
		object[arrayPos0].value1 = MBZBossHits
		object[arrayPos0].drawOrder = 4
			
		if screen.xsize == 320
			SetTileLayerEntry(272, 0, 30, 7)
			SetTileLayerEntry(273, 0, 32, 7)
			arrayPos1 = arrayPos0
			arrayPos1++
			temp1 = object[arrayPos1].xpos
		end if
	next
	if temp1 > 0
		foreach (TypeName[Crust], arrayPos0, ALL_ENTITIES)
			temp0 = object[arrayPos0].xpos
			temp0 -= temp1
			temp0 >>= 16
			Abs(temp0)
			if temp0 <= 100
				object[arrayPos0].propertyValue = 8
				object[arrayPos0].xpos += 0x100000
			end if
		next
	end if

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
